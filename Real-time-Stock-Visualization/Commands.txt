
Postgres Commands 

$ psql -U postgres
#psql (15.1 (Ubuntu 15.1-1.pgdg22.04+1))
#Type "help" for help.

postgres=# create database demo_streaming;
#CREATE DATABASE

postgres=# \c demo_streaming
#You are now connected to database "demo_streaming" as user "postgres".

demo_streaming=# create table venkat_demo (StartTime timestamptz not null, EndTime timestamptz not null, Bank_Name text, Avg_OpenPrice double precision, Avg_HighPrice double precision, Avg_LowPrice double precision, Avg_ClosePrice double precision, Avg_Volume double precision);

#CREATE TABLE


demo_streaming=# \d venkat_demo

                         Table "public.venkat_demo"
     Column     |           Type           | Collation | Nullable | Default 
----------------+--------------------------+-----------+----------+---------
 starttime      | timestamp with time zone |           | not null | 
 endtime        | timestamp with time zone |           | not null | 
 avg_openprice  | double precision         |           |          | 
 avg_highprice  | double precision         |           |          | 
 avg_lowprice   | double precision         |           |          | 
 avg_closeprice | double precision         |           |          | 
 avg_volume     | double precision         |           |          | 

demo_streaming=# select create_hypertable('venkat_demo', 'starttime');

demo_streaming=# \d venkat_demo
                         Table "public.venkat_demo"
     Column     |           Type           | Collation | Nullable | Default 
----------------+--------------------------+-----------+----------+---------
 starttime      | timestamp with time zone |           | not null | 
 endtime        | timestamp with time zone |           | not null | 
 avg_openprice  | double precision         |           |          | 
 avg_highprice  | double precision         |           |          | 
 avg_lowprice   | double precision         |           |          | 
 avg_closeprice | double precision         |           |          | 
 avg_volume     | double precision         |           |          | 
Indexes:
    "venkat_demo_starttime_idx" btree (starttime DESC)
Triggers:
    ts_insert_blocker BEFORE INSERT ON venkat_demo FOR EACH ROW EXECUTE FUNCTION _timescaledb_internal.insert_blocker()

docker exec -it a5ebc68ee51364764fb98a56804e55d3c3ea3486f9bd47a1c3264ac618bcefd9 kafka-topics.sh --list --bootstrap-server localhost:9092

docker exec -it a5ebc68ee51364764fb98a56804e55d3c3ea3486f9bd47a1c3264ac618bcefd9 kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic venkat_stream --from-beginning

docker exec -it  spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.0.0 spark_submit.py

docker exec -it Timescale_DB psql -U postgres
